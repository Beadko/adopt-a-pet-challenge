{"ast":null,"code":"var statuses = {\n  \"100\": \"Continue\",\n  \"101\": \"Switching Protocols\",\n  \"102\": \"Processing\",\n  \"103\": \"Early Hints\",\n  \"200\": \"OK\",\n  \"201\": \"Created\",\n  \"202\": \"Accepted\",\n  \"203\": \"Non-Authoritative Information\",\n  \"204\": \"No Content\",\n  \"205\": \"Reset Content\",\n  \"206\": \"Partial Content\",\n  \"207\": \"Multi-Status\",\n  \"208\": \"Already Reported\",\n  \"226\": \"IM Used\",\n  \"300\": \"Multiple Choices\",\n  \"301\": \"Moved Permanently\",\n  \"302\": \"Found\",\n  \"303\": \"See Other\",\n  \"304\": \"Not Modified\",\n  \"305\": \"Use Proxy\",\n  \"307\": \"Temporary Redirect\",\n  \"308\": \"Permanent Redirect\",\n  \"400\": \"Bad Request\",\n  \"401\": \"Unauthorized\",\n  \"402\": \"Payment Required\",\n  \"403\": \"Forbidden\",\n  \"404\": \"Not Found\",\n  \"405\": \"Method Not Allowed\",\n  \"406\": \"Not Acceptable\",\n  \"407\": \"Proxy Authentication Required\",\n  \"408\": \"Request Timeout\",\n  \"409\": \"Conflict\",\n  \"410\": \"Gone\",\n  \"411\": \"Length Required\",\n  \"412\": \"Precondition Failed\",\n  \"413\": \"Payload Too Large\",\n  \"414\": \"URI Too Long\",\n  \"415\": \"Unsupported Media Type\",\n  \"416\": \"Range Not Satisfiable\",\n  \"417\": \"Expectation Failed\",\n  \"418\": \"I'm a Teapot\",\n  \"421\": \"Misdirected Request\",\n  \"422\": \"Unprocessable Entity\",\n  \"423\": \"Locked\",\n  \"424\": \"Failed Dependency\",\n  \"425\": \"Too Early\",\n  \"426\": \"Upgrade Required\",\n  \"428\": \"Precondition Required\",\n  \"429\": \"Too Many Requests\",\n  \"431\": \"Request Header Fields Too Large\",\n  \"451\": \"Unavailable For Legal Reasons\",\n  \"500\": \"Internal Server Error\",\n  \"501\": \"Not Implemented\",\n  \"502\": \"Bad Gateway\",\n  \"503\": \"Service Unavailable\",\n  \"504\": \"Gateway Timeout\",\n  \"505\": \"HTTP Version Not Supported\",\n  \"506\": \"Variant Also Negotiates\",\n  \"507\": \"Insufficient Storage\",\n  \"508\": \"Loop Detected\",\n  \"509\": \"Bandwidth Limit Exceeded\",\n  \"510\": \"Not Extended\",\n  \"511\": \"Network Authentication Required\"\n};\n/**\r\n * Sets a response status code and text.\r\n * @example\r\n * res(ctx.status(301))\r\n * res(ctx.status(400, 'Custom status text'))\r\n * @see {@link https://mswjs.io/docs/api/context/status `ctx.status()`}\r\n */\n\nvar status = function status(statusCode, statusText) {\n  return function (res) {\n    res.status = statusCode;\n    res.statusText = statusText || statuses[String(statusCode)];\n    return res;\n  };\n};\n\nvar commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\nfunction createCommonjsModule(fn) {\n  var module = {\n    exports: {}\n  };\n  return fn(module, module.exports), module.exports;\n}\n\nvar normalizeHeaderName_1 = createCommonjsModule(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.normalizeHeaderName = void 0;\n  var HEADERS_INVALID_CHARACTERS = /[^a-z0-9\\-#$%&'*+.^_`|~]/i;\n\n  function normalizeHeaderName(name) {\n    if (typeof name !== 'string') {\n      name = String(name);\n    }\n\n    if (HEADERS_INVALID_CHARACTERS.test(name) || name.trim() === '') {\n      throw new TypeError('Invalid character in header field name');\n    }\n\n    return name.toLowerCase();\n  }\n\n  exports.normalizeHeaderName = normalizeHeaderName;\n});\nvar normalizeHeaderValue_1 = createCommonjsModule(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.normalizeHeaderValue = void 0;\n\n  function normalizeHeaderValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value);\n    }\n\n    return value;\n  }\n\n  exports.normalizeHeaderValue = normalizeHeaderValue;\n});\n\nvar __generator = commonjsGlobal && commonjsGlobal.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function sent() {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) {\n      try {\n        if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n        if (y = 0, t) op = [op[0] & 2, t.value];\n\n        switch (op[0]) {\n          case 0:\n          case 1:\n            t = op;\n            break;\n\n          case 4:\n            _.label++;\n            return {\n              value: op[1],\n              done: false\n            };\n\n          case 5:\n            _.label++;\n            y = op[1];\n            op = [0];\n            continue;\n\n          case 7:\n            op = _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n\n          default:\n            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n              _ = 0;\n              continue;\n            }\n\n            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n              _.label = op[1];\n              break;\n            }\n\n            if (op[0] === 6 && _.label < t[1]) {\n              _.label = t[1];\n              t = op;\n              break;\n            }\n\n            if (t && _.label < t[2]) {\n              _.label = t[2];\n\n              _.ops.push(op);\n\n              break;\n            }\n\n            if (t[2]) _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n        }\n\n        op = body.call(thisArg, _);\n      } catch (e) {\n        op = [6, e];\n        y = 0;\n      } finally {\n        f = t = 0;\n      }\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nvar __read = commonjsGlobal && commonjsGlobal.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {\n      ar.push(r.value);\n    }\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n};\n\nvar __values = commonjsGlobal && commonjsGlobal.__values || function (o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator,\n      m = s && o[s],\n      i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n    next: function next() {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\n\nvar HeadersPolyfill =\n/** @class */\nfunction () {\n  function HeadersPolyfill(init) {\n    var _this = this; // Normalized header {\"name\":\"a, b\"} storage.\n\n\n    this._headers = {}; // Keeps the mapping between the raw header name\n    // and the normalized header name to ease the lookup.\n\n    this._names = new Map();\n    /**\n     * @note Cannot check if the `init` is an instance of the `Headers`\n     * because that class is only defined in the browser.\n     */\n\n    if (['Headers', 'HeadersPolyfill'].includes(init === null || init === void 0 ? void 0 : init.constructor.name) || init instanceof HeadersPolyfill) {\n      var initialHeaders = init;\n      initialHeaders.forEach(function (value, name) {\n        _this.append(name, value);\n      }, this);\n    } else if (Array.isArray(init)) {\n      init.forEach(function (_a) {\n        var _b = __read(_a, 2),\n            name = _b[0],\n            value = _b[1];\n\n        _this.append(name, Array.isArray(value) ? value.join(', ') : value);\n      });\n    } else if (init) {\n      Object.getOwnPropertyNames(init).forEach(function (name) {\n        var value = init[name];\n\n        _this.append(name, Array.isArray(value) ? value.join(', ') : value);\n      });\n    }\n  }\n\n  HeadersPolyfill.prototype[Symbol.iterator] = function () {\n    return this.entries();\n  };\n\n  HeadersPolyfill.prototype.keys = function () {\n    var _a, _b, name_1, e_1_1;\n\n    var e_1, _c;\n\n    return __generator(this, function (_d) {\n      switch (_d.label) {\n        case 0:\n          _d.trys.push([0, 5, 6, 7]);\n\n          _a = __values(Object.keys(this._headers)), _b = _a.next();\n          _d.label = 1;\n\n        case 1:\n          if (!!_b.done) return [3\n          /*break*/\n          , 4];\n          name_1 = _b.value;\n          return [4\n          /*yield*/\n          , name_1];\n\n        case 2:\n          _d.sent();\n\n          _d.label = 3;\n\n        case 3:\n          _b = _a.next();\n          return [3\n          /*break*/\n          , 1];\n\n        case 4:\n          return [3\n          /*break*/\n          , 7];\n\n        case 5:\n          e_1_1 = _d.sent();\n          e_1 = {\n            error: e_1_1\n          };\n          return [3\n          /*break*/\n          , 7];\n\n        case 6:\n          try {\n            if (_b && !_b.done && (_c = _a.return)) _c.call(_a);\n          } finally {\n            if (e_1) throw e_1.error;\n          }\n\n          return [7\n          /*endfinally*/\n          ];\n\n        case 7:\n          return [2\n          /*return*/\n          ];\n      }\n    });\n  };\n\n  HeadersPolyfill.prototype.values = function () {\n    var _a, _b, value, e_2_1;\n\n    var e_2, _c;\n\n    return __generator(this, function (_d) {\n      switch (_d.label) {\n        case 0:\n          _d.trys.push([0, 5, 6, 7]);\n\n          _a = __values(Object.values(this._headers)), _b = _a.next();\n          _d.label = 1;\n\n        case 1:\n          if (!!_b.done) return [3\n          /*break*/\n          , 4];\n          value = _b.value;\n          return [4\n          /*yield*/\n          , value];\n\n        case 2:\n          _d.sent();\n\n          _d.label = 3;\n\n        case 3:\n          _b = _a.next();\n          return [3\n          /*break*/\n          , 1];\n\n        case 4:\n          return [3\n          /*break*/\n          , 7];\n\n        case 5:\n          e_2_1 = _d.sent();\n          e_2 = {\n            error: e_2_1\n          };\n          return [3\n          /*break*/\n          , 7];\n\n        case 6:\n          try {\n            if (_b && !_b.done && (_c = _a.return)) _c.call(_a);\n          } finally {\n            if (e_2) throw e_2.error;\n          }\n\n          return [7\n          /*endfinally*/\n          ];\n\n        case 7:\n          return [2\n          /*return*/\n          ];\n      }\n    });\n  };\n\n  HeadersPolyfill.prototype.entries = function () {\n    var _a, _b, name_2, e_3_1;\n\n    var e_3, _c;\n\n    return __generator(this, function (_d) {\n      switch (_d.label) {\n        case 0:\n          _d.trys.push([0, 5, 6, 7]);\n\n          _a = __values(Object.keys(this._headers)), _b = _a.next();\n          _d.label = 1;\n\n        case 1:\n          if (!!_b.done) return [3\n          /*break*/\n          , 4];\n          name_2 = _b.value;\n          return [4\n          /*yield*/\n          , [name_2, this.get(name_2)]];\n\n        case 2:\n          _d.sent();\n\n          _d.label = 3;\n\n        case 3:\n          _b = _a.next();\n          return [3\n          /*break*/\n          , 1];\n\n        case 4:\n          return [3\n          /*break*/\n          , 7];\n\n        case 5:\n          e_3_1 = _d.sent();\n          e_3 = {\n            error: e_3_1\n          };\n          return [3\n          /*break*/\n          , 7];\n\n        case 6:\n          try {\n            if (_b && !_b.done && (_c = _a.return)) _c.call(_a);\n          } finally {\n            if (e_3) throw e_3.error;\n          }\n\n          return [7\n          /*endfinally*/\n          ];\n\n        case 7:\n          return [2\n          /*return*/\n          ];\n      }\n    });\n  };\n  /**\n   * Returns a `ByteString` sequence of all the values of a header with a given name.\n   */\n\n\n  HeadersPolyfill.prototype.get = function (name) {\n    return this._headers[normalizeHeaderName_1.normalizeHeaderName(name)] || null;\n  };\n  /**\n   * Sets a new value for an existing header inside a `Headers` object, or adds the header if it does not already exist.\n   */\n\n\n  HeadersPolyfill.prototype.set = function (name, value) {\n    var normalizedName = normalizeHeaderName_1.normalizeHeaderName(name);\n    this._headers[normalizedName] = normalizeHeaderValue_1.normalizeHeaderValue(value);\n\n    this._names.set(normalizedName, name);\n  };\n  /**\n   * Appends a new value onto an existing header inside a `Headers` object, or adds the header if it does not already exist.\n   */\n\n\n  HeadersPolyfill.prototype.append = function (name, value) {\n    var resolvedValue = this.has(name) ? this.get(name) + \", \" + value : value;\n    this.set(name, resolvedValue);\n  };\n  /**\n   * Deletes a header from the `Headers` object.\n   */\n\n\n  HeadersPolyfill.prototype.delete = function (name) {\n    if (!this.has(name)) {\n      return this;\n    }\n\n    var normalizedName = normalizeHeaderName_1.normalizeHeaderName(name);\n    delete this._headers[normalizedName];\n\n    this._names.delete(normalizedName);\n\n    return this;\n  };\n  /**\n   * Returns the object of all the normalized headers.\n   */\n\n\n  HeadersPolyfill.prototype.all = function () {\n    return this._headers;\n  };\n  /**\n   * Returns the object of all the raw headers.\n   */\n\n\n  HeadersPolyfill.prototype.raw = function () {\n    var _this = this;\n\n    return Object.entries(this._headers).reduce(function (headers, _a) {\n      var _b = __read(_a, 2),\n          name = _b[0],\n          value = _b[1];\n\n      headers[_this._names.get(name)] = value;\n      return headers;\n    }, {});\n  };\n  /**\n   * Returns a boolean stating whether a `Headers` object contains a certain header.\n   */\n\n\n  HeadersPolyfill.prototype.has = function (name) {\n    return this._headers.hasOwnProperty(normalizeHeaderName_1.normalizeHeaderName(name));\n  };\n  /**\n   * Traverses the `Headers` object,\n   * calling the given callback for each header.\n   */\n\n\n  HeadersPolyfill.prototype.forEach = function (callback, thisArg) {\n    for (var name_3 in this._headers) {\n      if (this._headers.hasOwnProperty(name_3)) {\n        callback.call(thisArg, this._headers[name_3], name_3, this);\n      }\n    }\n  };\n\n  return HeadersPolyfill;\n}();\n\nvar _default = HeadersPolyfill;\nvar Headers = /*#__PURE__*/Object.defineProperty({\n  default: _default\n}, '__esModule', {\n  value: true\n});\nvar headersToList_1 = createCommonjsModule(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.headersToList = void 0;\n\n  function headersToList(headers) {\n    var headersList = [];\n    headers.forEach(function (value, name) {\n      var resolvedValue = value.includes(',') ? value.split(',').map(function (value) {\n        return value.trim();\n      }) : value;\n      headersList.push([name, resolvedValue]);\n    });\n    return headersList;\n  }\n\n  exports.headersToList = headersToList;\n});\nvar headersToString_1 = createCommonjsModule(function (module, exports) {\n  var __read = commonjsGlobal && commonjsGlobal.__read || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o),\n        r,\n        ar = [],\n        e;\n\n    try {\n      while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {\n        ar.push(r.value);\n      }\n    } catch (error) {\n      e = {\n        error: error\n      };\n    } finally {\n      try {\n        if (r && !r.done && (m = i[\"return\"])) m.call(i);\n      } finally {\n        if (e) throw e.error;\n      }\n    }\n\n    return ar;\n  };\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.headersToString = void 0;\n  /**\n   * Converts a given `Headers` instance to its string representation.\n   */\n\n  function headersToString(headers) {\n    var list = headersToList_1.headersToList(headers);\n    var lines = list.map(function (_a) {\n      var _b = __read(_a, 2),\n          name = _b[0],\n          value = _b[1];\n\n      var values = [].concat(value);\n      return name + \": \" + values.join(', ');\n    });\n    return lines.join('\\r\\n');\n  }\n\n  exports.headersToString = headersToString;\n});\nvar headersToObject_1 = createCommonjsModule(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.headersToObject = void 0; // List of headers that cannot have multiple values,\n  // while potentially having a comma in their single value.\n\n  var singleValueHeaders = ['user-agent'];\n  /**\n   * Converts a given `Headers` instance into a plain object.\n   * Respects headers with multiple values.\n   */\n\n  function headersToObject(headers) {\n    var headersObject = {};\n    headers.forEach(function (value, name) {\n      var isMultiValue = !singleValueHeaders.includes(name.toLowerCase()) && value.includes(',');\n      headersObject[name] = isMultiValue ? value.split(',').map(function (s) {\n        return s.trim();\n      }) : value;\n    });\n    return headersObject;\n  }\n\n  exports.headersToObject = headersToObject;\n});\nvar stringToHeaders_1 = createCommonjsModule(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.stringToHeaders = void 0;\n  /**\n   * Converts a string representation of headers (i.e. from XMLHttpRequest)\n   * to a new `Headers` instance.\n   */\n\n  function stringToHeaders(str) {\n    var lines = str.trim().split(/[\\r\\n]+/);\n    return lines.reduce(function (headers, line) {\n      var parts = line.split(': ');\n      var name = parts.shift();\n      var value = parts.join(': ');\n      headers.append(name, value);\n      return headers;\n    }, new Headers.default());\n  }\n\n  exports.stringToHeaders = stringToHeaders;\n});\nvar listToHeaders_1 = createCommonjsModule(function (module, exports) {\n  var __read = commonjsGlobal && commonjsGlobal.__read || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o),\n        r,\n        ar = [],\n        e;\n\n    try {\n      while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {\n        ar.push(r.value);\n      }\n    } catch (error) {\n      e = {\n        error: error\n      };\n    } finally {\n      try {\n        if (r && !r.done && (m = i[\"return\"])) m.call(i);\n      } finally {\n        if (e) throw e.error;\n      }\n    }\n\n    return ar;\n  };\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.listToHeaders = void 0;\n\n  function listToHeaders(list) {\n    var headers = new Headers.default();\n    list.forEach(function (_a) {\n      var _b = __read(_a, 2),\n          name = _b[0],\n          value = _b[1];\n\n      var values = [].concat(value);\n      values.forEach(function (value) {\n        headers.append(name, value);\n      });\n    });\n    return headers;\n  }\n\n  exports.listToHeaders = listToHeaders;\n});\nvar reduceHeadersObject_1 = createCommonjsModule(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.reduceHeadersObject = void 0;\n  /**\n   * Reduces given headers object instnace.\n   */\n\n  function reduceHeadersObject(headers, reducer, initialState) {\n    return Object.keys(headers).reduce(function (nextHeaders, name) {\n      return reducer(nextHeaders, name, headers[name]);\n    }, initialState);\n  }\n\n  exports.reduceHeadersObject = reduceHeadersObject;\n});\nvar objectToHeaders_1 = createCommonjsModule(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.objectToHeaders = void 0;\n  /**\n   * Converts a given headers object to a new `Headers` instance.\n   */\n\n  function objectToHeaders(headersObject) {\n    return reduceHeadersObject_1.reduceHeadersObject(headersObject, function (headers, name, value) {\n      var values = [].concat(value).filter(Boolean);\n      values.forEach(function (value) {\n        headers.append(name, value);\n      });\n      return headers;\n    }, new Headers.default());\n  }\n\n  exports.objectToHeaders = objectToHeaders;\n});\nvar flattenHeadersList_1 = createCommonjsModule(function (module, exports) {\n  var __read = commonjsGlobal && commonjsGlobal.__read || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o),\n        r,\n        ar = [],\n        e;\n\n    try {\n      while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {\n        ar.push(r.value);\n      }\n    } catch (error) {\n      e = {\n        error: error\n      };\n    } finally {\n      try {\n        if (r && !r.done && (m = i[\"return\"])) m.call(i);\n      } finally {\n        if (e) throw e.error;\n      }\n    }\n\n    return ar;\n  };\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.flattenHeadersList = void 0;\n\n  function flattenHeadersList(list) {\n    return list.map(function (_a) {\n      var _b = __read(_a, 2),\n          name = _b[0],\n          values = _b[1];\n\n      return [name, [].concat(values).join('; ')];\n    });\n  }\n\n  exports.flattenHeadersList = flattenHeadersList;\n});\nvar flattenHeadersObject_1 = createCommonjsModule(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.flattenHeadersObject = void 0;\n\n  function flattenHeadersObject(headersObject) {\n    return reduceHeadersObject_1.reduceHeadersObject(headersObject, function (headers, name, value) {\n      headers[name] = [].concat(value).join('; ');\n      return headers;\n    }, {});\n  }\n\n  exports.flattenHeadersObject = flattenHeadersObject;\n});\nvar lib = createCommonjsModule(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.flattenHeadersObject = exports.flattenHeadersList = exports.reduceHeadersObject = exports.objectToHeaders = exports.listToHeaders = exports.stringToHeaders = exports.headersToObject = exports.headersToList = exports.headersToString = exports.Headers = void 0;\n  Object.defineProperty(exports, \"Headers\", {\n    enumerable: true,\n    get: function get() {\n      return Headers.default;\n    }\n  });\n  Object.defineProperty(exports, \"headersToString\", {\n    enumerable: true,\n    get: function get() {\n      return headersToString_1.headersToString;\n    }\n  });\n  Object.defineProperty(exports, \"headersToList\", {\n    enumerable: true,\n    get: function get() {\n      return headersToList_1.headersToList;\n    }\n  });\n  Object.defineProperty(exports, \"headersToObject\", {\n    enumerable: true,\n    get: function get() {\n      return headersToObject_1.headersToObject;\n    }\n  });\n  Object.defineProperty(exports, \"stringToHeaders\", {\n    enumerable: true,\n    get: function get() {\n      return stringToHeaders_1.stringToHeaders;\n    }\n  });\n  Object.defineProperty(exports, \"listToHeaders\", {\n    enumerable: true,\n    get: function get() {\n      return listToHeaders_1.listToHeaders;\n    }\n  });\n  Object.defineProperty(exports, \"objectToHeaders\", {\n    enumerable: true,\n    get: function get() {\n      return objectToHeaders_1.objectToHeaders;\n    }\n  });\n  Object.defineProperty(exports, \"reduceHeadersObject\", {\n    enumerable: true,\n    get: function get() {\n      return reduceHeadersObject_1.reduceHeadersObject;\n    }\n  });\n  Object.defineProperty(exports, \"flattenHeadersList\", {\n    enumerable: true,\n    get: function get() {\n      return flattenHeadersList_1.flattenHeadersList;\n    }\n  });\n  Object.defineProperty(exports, \"flattenHeadersObject\", {\n    enumerable: true,\n    get: function get() {\n      return flattenHeadersObject_1.flattenHeadersObject;\n    }\n  });\n});\n/**\r\n * Sets one or multiple response headers.\r\n * @see {@link https://mswjs.io/docs/api/context/set `ctx.set()`}\r\n */\n\nfunction set() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  return function (res) {\n    var name = args[0],\n        value = args[1];\n\n    if (typeof name === 'string') {\n      res.headers.append(name, value);\n    } else {\n      var headers = lib.objectToHeaders(name);\n      headers.forEach(function (value, name) {\n        res.headers.append(name, value);\n      });\n    }\n\n    return res;\n  };\n}\n/**\r\n * Parses a given string into a JSON.\r\n * Does not throw an exception on an invalid JSON string.\r\n */\n\n\nfunction jsonParse(str) {\n  try {\n    return JSON.parse(str);\n  } catch (error) {\n    return undefined;\n  }\n}\n/**\r\n * Sets the given value as the JSON body of the response.\r\n * Appends a `Content-Type: application/json` header on the\r\n * mocked response.\r\n * @example\r\n * res(ctx.json('Some string'))\r\n * res(ctx.json({ key: 'value' }))\r\n * res(ctx.json([1, '2', false, { ok: true }]))\r\n * @see {@link https://mswjs.io/docs/api/context/json `ctx.json()`}\r\n */\n\n\nvar json = function json(body) {\n  return function (res) {\n    res.headers.set('Content-Type', 'application/json');\n    res.body = JSON.stringify(body);\n    return res;\n  };\n};\n/**\r\n * Returns a boolean indicating if the current process is running in Node.js environment.\r\n * @see https://github.com/mswjs/msw/pull/255\r\n */\n\n\nfunction isNodeProcess() {\n  // Check browser environment.\n  if (typeof global !== 'object') {\n    return false;\n  } // Check nodejs or React Native environment.\n\n\n  if (Object.prototype.toString.call(global.process) === '[object process]' || navigator.product === 'ReactNative') {\n    return true;\n  }\n}\n\nvar SET_TIMEOUT_MAX_ALLOWED_INT = 2147483647;\nvar MIN_SERVER_RESPONSE_TIME = 100;\nvar MAX_SERVER_RESPONSE_TIME = 400;\nvar NODE_SERVER_RESPONSE_TIME = 5;\n\nvar getRandomServerResponseTime = function getRandomServerResponseTime() {\n  if (isNodeProcess()) {\n    return NODE_SERVER_RESPONSE_TIME;\n  }\n\n  return Math.floor(Math.random() * (MAX_SERVER_RESPONSE_TIME - MIN_SERVER_RESPONSE_TIME) + MIN_SERVER_RESPONSE_TIME);\n};\n/**\r\n * Delays the response by the given duration (ms).\r\n * @example\r\n * res(ctx.delay(1200)) // delay response by 1200ms\r\n * res(ctx.delay()) // emulate realistic server response time\r\n * res(ctx.delay('infinite')) // delay response infinitely\r\n * @see {@link https://mswjs.io/docs/api/context/delay `ctx.delay()`}\r\n */\n\n\nvar delay = function delay(durationOrMode) {\n  return function (res) {\n    var delayTime;\n\n    if (typeof durationOrMode === 'string') {\n      switch (durationOrMode) {\n        case 'infinite':\n          {\n            // Using `Infinity` as a delay value executes the response timeout immediately.\n            // Instead, use the maximum allowed integer for `setTimeout`.\n            delayTime = SET_TIMEOUT_MAX_ALLOWED_INT;\n            break;\n          }\n\n        case 'real':\n          {\n            delayTime = getRandomServerResponseTime();\n            break;\n          }\n\n        default:\n          {\n            throw new Error(\"Failed to delay a response: unknown delay mode \\\"\".concat(durationOrMode, \"\\\". Please make sure you provide one of the supported modes (\\\"real\\\", \\\"infinite\\\") or a number to \\\"ctx.delay\\\".\"));\n          }\n      }\n    } else if (typeof durationOrMode === 'undefined') {\n      // Use random realistic server response time when no explicit delay duration was provided.\n      delayTime = getRandomServerResponseTime();\n    } else {\n      // Guard against passing values like `Infinity` or `Number.MAX_VALUE`\n      // as the response delay duration. They don't produce the result you may expect.\n      if (durationOrMode > SET_TIMEOUT_MAX_ALLOWED_INT) {\n        throw new Error(\"Failed to delay a response: provided delay duration (\".concat(durationOrMode, \") exceeds the maximum allowed duration for \\\"setTimeout\\\" (\").concat(SET_TIMEOUT_MAX_ALLOWED_INT, \"). This will cause the response to be returned immediately. Please use a number within the allowed range to delay the response by exact duration, or consider the \\\"infinite\\\" delay mode to delay the response indefinitely.\"));\n      }\n\n      delayTime = durationOrMode;\n    }\n\n    res.delay = delayTime;\n    return res;\n  };\n};\n\nvar useFetch = isNodeProcess() ? require('node-fetch') : window.fetch;\n\nvar augmentRequestInit = function augmentRequestInit(requestInit) {\n  var headers = new lib.Headers(requestInit.headers);\n  headers.set('x-msw-bypass', 'true');\n  return Object.assign(Object.assign({}, requestInit), {\n    headers: headers.all()\n  });\n};\n\nvar createFetchRequestParameters = function createFetchRequestParameters(input) {\n  var body = input.body,\n      method = input.method;\n  var requestParameters = Object.assign(Object.assign({}, input), {\n    body: undefined\n  });\n\n  if (['GET', 'HEAD'].includes(method)) {\n    return requestParameters;\n  }\n\n  requestParameters.body = typeof body === 'object' ? JSON.stringify(body) : body;\n  return requestParameters;\n};\n/**\r\n * Performs a bypassed request inside a request handler.\r\n * @example\r\n * const originalResponse = await ctx.fetch(req)\r\n * @see {@link https://mswjs.io/docs/api/context/fetch `ctx.fetch()`}\r\n */\n\n\nvar fetch = function fetch(input) {\n  var requestInit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (typeof input === 'string') {\n    return useFetch(input, augmentRequestInit(requestInit));\n  }\n\n  var requestParameters = createFetchRequestParameters(input);\n  var derivedRequestInit = augmentRequestInit(requestParameters);\n  return useFetch(input.url.href, derivedRequestInit);\n};\n\nexport { commonjsGlobal as a, set as b, createCommonjsModule as c, delay as d, json as e, fetch as f, isNodeProcess as i, jsonParse as j, lib as l, status as s };","map":null,"metadata":{},"sourceType":"module"}